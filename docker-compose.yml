version: '3.8'

services:
  # PostgreSQL Database - Long-term storage
  postgres:
    image: postgres:16.10-alpine3.22
    container_name: chatapp-postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - chatapp-network

  # Redis - Fast cache and sessions
  redis:
    image: redis:7-alpine
    container_name: chatapp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - chatapp-network

  # RabbitMQ - Message queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: chatapp-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-admin123}
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - chatapp-network

  # Your Flask Application
  flask-app:
    build: .
    container_name: chatapp-flask
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres  # Service name, not localhost!
      - DB_NAME=${DB_NAME}
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-admin}:${RABBITMQ_PASSWORD:-admin123}@rabbitmq:5672/
    volumes:
      - .:/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - chatapp-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  chatapp-network:
    driver: bridge